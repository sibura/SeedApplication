<!Doctype html>
<html>
<head>
        <link rel="stylesheet" type="text/css" href="style.css">
        <style type="text/css">
                @import url(http://fonts.googleapis.com/css?family=Source+Sans+Pro:300);
body {
 /* background: #222;*/
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  overflow: hidden;
}

.wrapper {
  width: 650px;
  margin: 0 auto;
  position: relative;
}

.instructions {
  width: 100%;
  height: 40px;
  font: 18px/40px 'Source Sans Pro', Helvetica, Arial, sans-serif;
  color: #4597d1;
  text-align: center;
}

input {
  width: 385px;
  height: 50px;
  font-size: 30px;
  float: left;
  border: none;
  background: rgba(255, 255, 255, 0.1);
  padding-left: 20px;
  margin-right: 20px;
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  color: #8ec2da;
  box-sizing: border-box;
}

input:focus {
  border: 1px solid #f1e85b
}

.currencies {
  list-style: none;
  margin: 0;
  padding: 0;
  font-size: 24px;
  position: absolute;
  right: 0;
  max-height: 50px;
  overflow: hidden;
  transition: all 0.5s ease-in-out;
  z-index: 10;
}

.currencies li {
  height: 40px;
  background: #4162a9;
  margin-bottom: 5px;
  line-height: 40px;
  text-align: center;
  padding: 5px;
  color: #f5fcd0;
  cursor: pointer;
}

.currencies li:hover {
  background: #ee3b37;
}

.open {
  max-height: 600px;
}

.results {
  float: left;
  width: 100%;
  list-style: none;
  margin: 0;
  padding: 0;
}

.results li {
  width: 100%;
  height: 30px;
  line-height: 30px;
  background: rgba(0, 0, 0, 0.2);
  margin-top: 10px;
  font-size: 25px;
  color: #f5fcd0;
}

.name,
.iso,
.result {
  width: 33.33%;
  float: left;
  text-align: center;
}

.hide {
  display: none;
}

.warning {
  clear: both;
  color: #f8f8f8;
  font-size: 13px;
  padding: 5px 0;
}

.yahoo {
  text-align: center;
}

        </style>
</head> 

<h1><a href="/currenc/add">Add a Currency</a></h1>
    
                {{#currencie}}
                <tr>

                    <td></td>
                    <td>{{description}}</td>
                   
                </tr>

                {{/currencie}}
<div class="wrapper">
  <p class="instructions">Enter any numeric amount and select a currency from the dropdown menu</p>
  <input type="number" min='0' class='amount' id='curr_amount' placeholder='Amount to convert' />
  <ul class='currencies'>
    <li class='EUR active'>Euro(EUR)</li>
    <li class='USD'>US Dollar(USD)</li>
    <li class='GBP'>Great Britain Pound(GBP)</li>
    <li class='ZAR'>South Africa Rand(ZAR)</li>
  </ul> 
  <div class="yahoo">
    <img src="https://poweredby.yahoo.com/white.png" alt="" />
  </div>
</div><br />
<script type="text/javascript">
var currencies = ['EUR', 'USD', 'GBP', 'ZAR'];
var curr_len = currencies.length;
var curr_url = 'https://query.yahooapis.com/v1/public/yql?q=';
var active;
var all_currs = {};

//Dropdown expanding functionality
$('.currencies').hover(function() {
  $(this).addClass('open');
}, function() {
  $(this).removeClass('open');
});

//change selected currency
$('.currencies li').click(function() {
  $('.active').removeClass('active');
  $('.currencies').prepend($(this)).removeClass('open');
  $(this).addClass('active');
  hideDublicate();
  updateAmounts();
});

//Live update amounts
$('.amount').bind('keyup', function() {
  updateAmounts();
});

//Hides result same with the selected currency
function hideDublicate() {
  $('.hide').removeClass('hide');
  active = $('.currencies .active').attr('class').replace(/ active/, '');
  $('.results .' + active).addClass('hide');
}

function getRate(active, current) {
  if (current == active) {
    return 1;
  }
  var name = active + current;
  var reverse_name = current + active;

  if (all_currs[name]) {
    return all_currs[name].Rate
  } else {
    return 1 / all_currs[reverse_name].Rate;
  }
}

function updateAmounts() {
  var userInput = $('.amount').val() || 0;
  for (var i = 0; i < curr_len; i++) {
    var amount = userInput * getRate(active, currencies[i]);
    $('.' + currencies[i] + ' .result').text(Number(amount).toFixed(3))
  }
}

function pairwise(list) {
  if (list.length < 2) {
    return [];
  }
  var first = list[0],
    rest = list.slice(1),
    pairs = rest.map(function(x) {
      return [first, x];
    });
  return pairs.concat(pairwise(rest));
}

//retrieves rates and stores them to all_currs object
(function() {
  var query_uri_component = encodeURIComponent("select * from yahoo.finance.xchange where pair in");
  var all_currency_pairs = pairwise(currencies).map(function(arr) {
    return arr.join("")
  }).join('","');
  var request_url = curr_url + query_uri_component + encodeURIComponent(" (\"" + all_currency_pairs + "\")") + '&format=json&diagnostics=true&env=' + encodeURIComponent("store://datatables.org/alltableswithkeys") + '&callback=set_currs';
  $.ajax({
    dataType: 'jsonp',
    url: request_url
  })
})();

hideDublicate();

</script>

</html>